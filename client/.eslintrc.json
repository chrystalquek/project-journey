{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": ["plugin:react/recommended", "airbnb", "prettier"],
  "globals": {
    // tell eslint that React is globally available in nextjs projects, and doesn't need to be imported
    "React": "writable",
    "JSX": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2020,
    "sourceType": "module"
  },
  "plugins": ["react", "@typescript-eslint"],
  "root": true,
  "rules": {
    "import/prefer-default-export": "off",
    // https://github.com/yannickcr/eslint-plugin-react/issues/2353
    "react/prop-types": "off",
    "react/jsx-props-no-spreading": "off",
    // suppress errors for missing 'import React' in files
    "react/react-in-jsx-scope": "off",
    // allow jsx syntax in ts files (for next.js project)
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [".ts", ".tsx"]
      }
    ],
    // https://stackoverflow.com/questions/63818415/react-was-used-before-it-was-defined/64024916#64024916
    "no-use-before-define": "off",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": ["error"],
    "@typescript-eslint/no-use-before-define": ["error"],
    // https://stackoverflow.com/questions/59265981/typescript-eslint-missing-file-extension-ts-import-extensions
    "no-param-reassign": 0,
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_"
      }
    ],
    // https://stackoverflow.com/questions/35637770/how-to-avoid-no-param-reassign-when-setting-a-property-on-a-dom-object
    "linebreak-style": 0,
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "no-underscore-dangle": [
      "error",
      {
        "allow": ["_id"]
      }
    ]
  },
  "settings": {
    "import/resolver": {
      // https://stackoverflow.com/questions/56548928/eslint-resolve-error-on-imports-using-with-path-mapping-configured-jsconfig-json
      "alias": {
        "map": [
          ["@components", "./src/components/"],
          ["@constants", "./src/utils/constants/"],
          ["@redux", "./src/redux/"],
          ["@utils", "./src/utils/"],
          ["@public", "./public/"],
          ["@type", "./src/types/"],
          ["@api", "./src/api/"],
          ["@styles", "./src/styles/"]
        ],
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      },
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  }
}
